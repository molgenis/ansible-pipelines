---
#
# EasyBuild.
#
- name: Download EasyBuild bootstrap script and deps for offline bootstrapping.
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
    mode: "{{ MODE_0664_HARD }}"
    validate_certs: false
  with_items:
    - url: "{{ easybuild_releases[easybuild_version]['bootstrap_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/bootstrap_eb_{{ easybuild_releases[easybuild_version]['bootstrap_version'] }}.py"
      checksum: "{{ easybuild_releases[easybuild_version]['bootstrap_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['vsc_install_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['vsc_install_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['vsc_base_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['vsc_base_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['framework_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['framework_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['easyblocks_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['easyblocks_checksum'] }}"
    - url: "{{ easybuild_releases[easybuild_version]['easyconfigs_url'] }}"
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
      checksum: "{{ easybuild_releases[easybuild_version]['easyconfigs_checksum'] }}"

- name: Install latest EasyBuild version with bootstrap script.
  #
  # Ansible doesn't run task in a login shell, so we have to source the EasyBuild config manually.
  #
  ansible.builtin.shell:
    cmd: |
         source "{{ easybuild_modules_dir }}/modules.bashrc"
         umask 0002
         export EASYBUILD_BOOTSTRAP_SOURCEPATH="{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/"
         export EASYBUILD_ENFORCE_CHECKSUMS='False'
         PYTHON=python3
         which "${PYTHON}" || PYTHON=python
         ${PYTHON} "{{ install_easybuild_bootstrap_script_path }}" "{{ hpc_env_prefix }}"
  args:
    executable: /bin/bash
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  vars:
    install_easybuild_bootstrap_script_path: "{{ easybuild_sources_dir }}/e/EasyBuild/{{ easybuild_version }}/\
        bootstrap_eb_{{ easybuild_releases[easybuild_version]['bootstrap_version'] }}.py"
  changed_when: true

- name: Check if the required EasyBuild version is installed.
  ansible.builtin.shell:
    cmd: |
         set -o pipefail
         source "{{ easybuild_modules_dir }}/modules.bashrc" >/dev/null 2>&1
         module load EasyBuild/{{ easybuild_version }}
         if eb --version 2>/dev/null | grep '^This is EasyBuild' >/dev/null 2>&1; then
           version=$(eb --version 2>/dev/null | grep '^This is EasyBuild' | sed 's|^This is EasyBuild \([0-9\.]*\).*$|\1|')
         else
           version=$(eb --version 2>&1)
         fi
         echo "${version}"
  args:
    executable: /bin/bash
    warn: false
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  changed_when: false
  failed_when: false
  check_mode: false
  register: install_easybuild_installed_eb_version

- name: Determine if the required EasyBuild version needs to be installed.
  ansible.builtin.set_fact:
    install_easybuild_install_eb_from_source: true
  when: 'install_easybuild_installed_eb_version is failed or install_easybuild_installed_eb_version.stdout != easybuild_version'

- name: Report EasyBuild status.
  ansible.builtin.debug:
    msg: "Will install the required EasyBuild version with the latest EasyBuild version \
          as the bootstrapped version is not the requested version. \
          (Detected {{ install_easybuild_installed_eb_version.stdout }} and need {{ easybuild_version }}.)"
  when: install_easybuild_install_eb_from_source|default(false)

- name: Install required EasyBuild version with EasyBuild.
  ansible.builtin.shell:
    cmd: |
         source "{{ easybuild_modules_dir }}/modules.bashrc"
         umask 0002
         module load EasyBuild
         eb --software="EasyBuild,{{ easybuild_version }}"
  args:
    executable: /bin/bash
  environment:
    SOURCE_HPC_ENV: "True"   # Required to source our modules.bashrc in non-interactive shells.
  register: install_easybuild_result
  changed_when: "install_easybuild_result.rc == 0"
  when: install_easybuild_install_eb_from_source|default(false)
...
